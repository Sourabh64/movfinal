#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
\usepackage{titlesec}
\titleformat{\chapter}[display]   
{\normalfont\huge\bfseries}{\chaptertitlename\ \thechapter}{20pt}{\LARGE}{\centering}   
\titlespacing*{\chapter}{0pt}{-30pt}{10pt}
\usepackage[format=hang,font={small,bf}]{caption}
\end_preamble
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "Times New Roman"
\font_sans "default" "Times New Roman"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.25in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
tolerance=1 
\end_layout

\begin_layout Plain Layout


\backslash
emergencystretch=
\backslash
maxdimen 
\end_layout

\begin_layout Plain Layout


\backslash
hyphenpenalty=10000
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{fancy} 
\end_layout

\begin_layout Plain Layout


\backslash
fancyhf{} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
rhead{
\backslash
hrulefill} 
\end_layout

\begin_layout Plain Layout


\backslash
lfoot{
\backslash
hrule}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
fancypagestyle{plain}{%   
\end_layout

\begin_layout Plain Layout


\backslash
fancyhf{}%   
\end_layout

\begin_layout Plain Layout


\backslash
lhead{
\backslash
small {
\backslash
textbf{
\backslash
textit {Predicting the Conceptual Appeal of movies Using Data Analytics}}
 }}
\end_layout

\begin_layout Plain Layout


\backslash
rhead{
\backslash
small {
\backslash
textbf{
\backslash
textit {2019-2020}} }}
\end_layout

\begin_layout Plain Layout


\backslash
lfoot {
\backslash
small 
\backslash
textbf{
\backslash
emph{Dept.
 of CSE, DSCE, Bangalore 78}}}
\end_layout

\begin_layout Plain Layout


\backslash
rfoot {
\backslash
thepage}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
headrulewidth}{0.4pt}
\end_layout

\begin_layout Plain Layout

} 	
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
footrulewidth}{0.4pt}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
chaptername}{}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Left Header

\series bold
\shape italic
\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
small {
\backslash
textbf{
\backslash
textit {
\end_layout

\end_inset

Predicting the Conceptual Appeal of movies Using Data Analytics 
\begin_inset ERT
status open

\begin_layout Plain Layout

}} }}
\end_layout

\end_inset


\end_layout

\begin_layout Right Header

\series bold
\shape italic
\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
small {
\backslash
textbf{
\backslash
textit {
\end_layout

\end_inset

2019-2020 
\begin_inset ERT
status open

\begin_layout Plain Layout

}} }}
\end_layout

\end_inset


\end_layout

\begin_layout Left Footer

\series bold
\shape italic
\size footnotesize
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
small 
\backslash
textbf{
\backslash
textit {
\end_layout

\end_inset

Dept.
 of CSE, DSCE, Bangalore 78
\begin_inset ERT
status open

\begin_layout Plain Layout

}}}
\end_layout

\end_inset


\end_layout

\begin_layout Right Footer
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic} 
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Abstract}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
With growing volumes and types of data and piquing interest in using data
 to produce valuable insights, it has become one of the most important areas
 of study in today’s era.
 Huge datasets are available for predictive analysis of several aspects
 of movies and many domains are available for making predictions.
 It is beneficial to all varieties of people associated with the art of
 movie making and watching.
 Stakeholders like producers can know the risks and advantages of investing
 in particular movies.
 Movie watchers can determine if the movie is up to the mark and worth their
 money.
 This paper aims to explore the different techniques used for predictive
 analysis.
 We also seek to explore what factors are necessary to predict the quality
 of a movie in terms of its concept and how to establish a relation between
 different categories.
 The objective of this project is to work on the dataset available and identify
 various factors affecting movie ratings and thereby the quality.
 These parameters are further used to predict the ratings of the movie before
 it is released.
 We used data analytics to achieve this objective.
 Data analytics comprises of many different ways to analyse a given dataset.
 For getting appropriate results from our datasets, we used multiple linear
 regression to train the model and then predict the results.
 
\end_layout

\begin_layout Chapter*

\bar under
Acknowledgement
\end_layout

\begin_layout Standard
We would like to express our gratitude DR.
 C P S Prakash, Principal of DSCE, for permitting us to utilise the resources
 provided by our college for the project.
 We are also very grateful to our respected Vice Principal, HOD of Computer
 Science and Engineering Department, DSCE, Dr.
 Ramesh Babu for his encouragement and support.
 We are immensely thankful to our learned and respected guide, Kusuma H,
 who constantly guided us throughout all the phases of the project and helped
 us with the technicalities of the project with her expertise.
 We deeply express our gratitude for her support.
 We would also like to thank our project co-ordinator, Dr.Vindhya for providing
 us the opportunity to work on our projects and giving a wide range of topics
 to select from.
 We are very thankful for her constant support.
 We would also like to thank other faculty and staff members for their kind
 co-operation and help.
 Lastly, we would like to acknowledge our family members and classmates
 for providing us with moral support and encouragement.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{2}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Acknowledgements}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{List of Figures}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Movie Prediction
\end_layout

\begin_layout Standard
Movie making involves huge investment thus movie prediction plays a vital
 role in the movie industry.
 Movies are the most convenient way to entertain people.
 However, only few movies get high success and are ranked high.
 Many movies are produced by the movie industry in a year.
\end_layout

\begin_layout Standard
Movie revenue depends on various components such as cast acting in a movie,
 director of the movie, film critics’ review, rating for the movie, genre
 of the movie, etc.
 Due to these multiple components there is no formula that helps us to provide
 analysis for predicting how much revenue a particular movie will generate.
 
\end_layout

\begin_layout Standard
However, by analysing the IMDB score generated by previous movies, a model
 can be built which can help us predict the expected quality for a particular
 movie.
 As we know in today’s world, movies are one of the biggest sources of entertain
ment and business.
 To expand this business further, we need the technology through which we
 can predict the success rate of the movie.
 Success rate of movies, models and mechanisms can be used to predict the
 success of a movie.
 It will help the viewers whether to watch the movie or not as the quality
 of the movie will be predicted.
 Stakeholders such as actors, producers, director etc.
 can use these predictions to make more informed decisions.
 They can make the decision before the movie is released.
 This proposed work aims to develop a model based upon the data mining technique
s that may help in predicting the success of a movie in advance thereby
 reducing certain level of uncertainty.
 This is an excellent way to find detailed information about almost every
 film ever made is through IMDB.
 
\end_layout

\begin_layout Section
Multiple Linear Regression
\end_layout

\begin_layout Standard
Multiple linear regression (MLR), also known simply as multiple regression,
 is a statistical technique that uses several explanatory variables to predict
 the outcome of a response variable.
 The goal of multiple linear regression (MLR) is to model the linear relationshi
p between the explanatory (independent) variables and response (dependent)
 variable.
 In essence, multiple regression is the extension of ordinary least-squares
 (OLS) regression that involves more than one explanatory variable.
\end_layout

\begin_layout Standard
The Formula for Multiple Linear Regression is
\end_layout

\begin_layout Standard
yi = β0 + β1xi1 + β2xi2 + ...
 + βpxip + ϵ
\end_layout

\begin_layout Standard
where, for i = n observations:
\end_layout

\begin_layout Standard
yi = dependent variable
\end_layout

\begin_layout Standard
xi = expanatory variables
\end_layout

\begin_layout Standard
β0 = y-intercept (constant term)
\end_layout

\begin_layout Standard
βp = slope coefficients for each explanatory variable
\end_layout

\begin_layout Standard
ϵ = the model’s error term (also known as the residuals)
\end_layout

\begin_layout Standard
A simple linear regression is a function that allows an analyst or statistician
 to make predictions about one variable based on the information that is
 known about another variable.
 Linear regression can only be used when one has two continuous variables—an
 independent variable and a dependent variable.
 The independent variable is the parameter that is used to calculate the
 dependent variable or outcome.
 A multiple regression model extends to several explanatory variables.
\end_layout

\begin_layout Standard
A multiple regression model is based on the following assumptions:
\end_layout

\begin_layout Standard
• There is a linear relationship between the dependent variables and the
 independent variables.
\end_layout

\begin_layout Standard
• The independent variables are not too highly correlated with each other.
\end_layout

\begin_layout Standard
• yi observations are selected independently and randomly from the population.
\end_layout

\begin_layout Standard
• Residuals should be normally distributed with a mean of 0 and variance
 σ.
\end_layout

\begin_layout Standard
The coefficient of determination (R-squared) is a statistical metric that
 is used to measure how much of the variation in outcome can be explained
 by the variation in the independent variables.
 R2 always increases as more predictors are added to the MLR model even
 though the predictors may not be related to the outcome variable.
\end_layout

\begin_layout Standard
R2 by itself can't thus be used to identify which predictors should be included
 in a model and which should be excluded.
 R2 can only be between 0 and 1, where 0 indicates that the outcome cannot
 be predicted by any of the independent variables and 1 indicates that the
 outcome can be predicted without error from the independent variables.
\end_layout

\begin_layout Standard
When interpreting the results of a multiple regression, beta coefficients
 are valid while holding all other variables constant ("all else equal").
 The output from a multiple regression can be displayed horizontally as
 an equation, or vertically in table form.
\end_layout

\begin_layout Section
Organization of the report
\end_layout

\begin_layout Standard
The rest of the report is organized as follows: Chapter-2different methodology
 of iris Recognition..
 The implementation ofIris Recognition using Fisher's Algorithm is discussed
 in Chapter-3.
 The advantages and applications of Iris Recognition is highlighted in Chapter-4.
 Chapter-5 concludes the seminar report.
\end_layout

\begin_layout Chapter
Problem Statement and Proposed Solution
\end_layout

\begin_layout Section
Problem Statement
\end_layout

\begin_layout Standard
To identify the categories that affect the quality of a movie and develop
 a model that takes the required parameters to predict the quality of an
 upcoming movie based on IMDB score.
\end_layout

\begin_layout Section

\series bold
Proposed Solution
\end_layout

\begin_layout Standard
The proposed solution for the problem is using data analytics.
 The model takes in the identified parameters which affect the quality of
 movies.
 The multiple linear regression model takes these inputs and predicts the
 score based on weights assigned by the model during training.
\end_layout

\begin_layout Standard
The proposed solution has two phases – Training phase and Testing phase.
 The processing in each phase is shown as in fig.
 2.2.
\end_layout

\begin_layout Standard
We predict different measures of quality, based solely on what we know about
 a movie before its debut.
 Many attributes reveal themselves after a movie premier, but our input
 features include only from a dataset that is available.
 Our measures of movie success are diverse enough to cover a variety of
 perspectives, from directors’ experience to acting skills to genres.
\end_layout

\begin_layout Standard
To determine the quality of the movie, we take a complete dataset of movies
 with parameters such as movie name, cast, director, genre and rating.
 We first predict the quality of movie produced by a director in different
 genres.
 Here, we generate different values for each genre.
 
\end_layout

\begin_layout Standard
Similarly, we apply this to the actors/actresses present in dataset as well.
 This process is very important since it is illogical to determine how good
 a movie is just on the basis of an actor’s success in all movies.
 He might be talented to act in a particular genre of movie but might be
 quite the contrary in another genre.
 Analysing the ratings of different genres for an actor would help in getting
 a better understanding of how well an actor can act in a movie.
\end_layout

\begin_layout Standard
Now, we have predicted for many actors as well as directors based on specific
 genres.
 If a new movie is about to be released, the details of the movie are available
 on the internet or from the trailers.
 One can easily know who has directed the movie and the cast of the same.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 10.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Visible light reveals rich pigmentation details of an Iris by exciting melanin,
 the main colouring component in the iris.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
System Characteristics 
\end_layout

\begin_layout Standard
The system should be able to: 
\end_layout

\begin_layout Standard
1.
 Accept the input parameters 
\end_layout

\begin_layout Standard
2.
 Calculate the weights of the input parameters 
\end_layout

\begin_layout Standard
3.
 Predict the IMDB score of a new movie given its input parameters.
 
\end_layout

\begin_layout Standard
4.
 Display score.
 
\end_layout

\begin_layout Chapter
Literature Survey
\end_layout

\begin_layout Standard
[1] Sentiment Analysis of Movie Review Comments
\end_layout

\begin_layout Standard
Authors: K.
 Yessenov and S.
 Misailovic
\end_layout

\begin_layout Standard
Description: This paper presents an empirical study of efﬁcacy of machine
 learning techniques in classifying text messages by semantic meaning.
 They use movie review comments from popular social network Digg as our
 data set and classify text by subjectivity/objectivity and negative/positive
 attitude.
 They propose different approaches in extracting text features such as bag-of-wo
rds model, using large movie reviews corpus, restricting to adjectives and
 adverbs, handling negations, bounding word frequencies by a threshold,
 and using WordNet synonyms knowledge.
 They evaluate their effect on accuracy of four machine learning methods-Naïve
 Bayes, Decision Trees, Maximum-Entropy, and K-Means clustering.
 They conclude our study with explanation of observed trends in accuracy
 rates and providing directions for future work.
\end_layout

\begin_layout Standard
[2] Deep Learning for Sentiment Analysis of Movie Reviews
\end_layout

\begin_layout Standard
Authors: H.
 Pouransari, & S.
 Ghili
\end_layout

\begin_layout Standard
Description: In this study, they explore various natural language processing
 (NLP) methods to perform sentiment analysis.
 We look at two different datasets, one with binary labels, and one with
 multi-class labels.
 For the binary classiﬁcation, they applied the bag of words, and skip-gram
 word2vec models followed by various classiﬁers, including random forest,
 SVM, and logistic regression.
 For the multi-class case, they implemented the recursive neural tensor
 networks (RNTN).
 To overcome the high computational cost of training the standard RNTN they
 introduce the low-rank RNTN, in which the matrices involved in the quadratic
 term of RNTN are substituted by symmetric low-rank matrices.
 They show that the low-rank RNTN leads to signiﬁcant saving in computational
 cost, while having a similar accuracy as that of RNTN.
 
\end_layout

\begin_layout Standard
[3] Rating based Mechanism to Contrast Abnormal Posts on Movies Reviews
 using MapReduce Paradigm 
\end_layout

\begin_layout Standard
Author: Piyush Gupta, Atul Sharma, Jitender Grover
\end_layout

\begin_layout Standard
Description: BigData contains large amount of unstructured data in the form
 of movie data, facebook data, and industry data and so on.
 There are number of posts are posted on twitter about movies by different
 users.
 Out of these posts some of posts may be inappropriate.
 These posts contain negative comments as well as positive comments about
 movies.
 It is difficult to distinguish large number of positive and negative posts.
 To overcome this kind of problem we proposed a rating based mechanism that
 distinguishes abnormal posts with the help of users rating.
 If rating is positive then post is normal otherwise it is abnormal.
 To implement proposed mechanism we used hadoop platform and MapReduce paradigm.
\end_layout

\begin_layout Standard
[4] Movie Success Prediction using Machine Learning Algorithms and their
 Comparison
\end_layout

\begin_layout Standard
Authors: Rijul Dhir, Anand Raj
\end_layout

\begin_layout Standard
Description: The number of movies produced in the world is growing at an
 exponential rate and success rate of movie is of utmost importance since
 billions of dollars are invested in the making of each of these movies.
 In such a scenario, prior knowledge about the success or failure of a particula
r movie and what factor affect the movie success will benefit the production
 houses since these predictions will give them a fair idea of how to go
 about with the advertising and campaigning, which itself is an expensive
 affair altogether.
 So, the prediction of the success of a movie is very essential to the film
 industry.
 In this proposed research, we give our detailed analysis of the Internet
 Movie Database (IMDb) and predict the IMDb score.
 This database contains categorical and numerical information such as IMDb
 score, director, gross, budget and so on and so forth.
 This research proposes a way to predict how successful a movie will be
 prior to its arrival at the box office instead of listening to critics
 and others on whether a movie will be successful or not.
 The proposed research provides a quite efﬁcient approach to predict IMDb
 score on IMDb Movie Dataset.
 We will try to unveil the important factors inﬂuencing the score of IMDb
 Movie Data.
 We have used different algorithms in the research work for analysis but
 among all Random forest gave the best prediction accuracy, which is better
 in comparison to the previous studies.
 
\end_layout

\begin_layout Chapter
Architecture and Design
\end_layout

\begin_layout Section
System Overview
\end_layout

\begin_layout Standard
The overview of the system is represented in Fig.4.1.
 It shows the modules involved in building the system i.e,
\end_layout

\begin_layout Standard
- User interface 
\end_layout

\begin_layout Standard
- Request.py 
\end_layout

\begin_layout Standard
- App.py 
\end_layout

\begin_layout Standard
- Model.py 
\end_layout

\begin_layout Standard
- Training modules and datasets 
\end_layout

\begin_layout Section
Software Architecture
\end_layout

\begin_layout Subsection
System Block Diagram
\end_layout

\begin_layout Standard
The overall block diagram of the proposed system is shown in the Fig.4.2.
 
\end_layout

\begin_layout Standard
-User inputs the details to the system through UI.
 
\end_layout

\begin_layout Standard
-The overall system is represented as a Linear Regression.
 It consists of: Input processing and Multiple Linear Regression.
 
\end_layout

\begin_layout Standard
-Input details are processed and then a value is predicted from the model
 that is built from multiple linear regression.
 
\end_layout

\begin_layout Standard
-Output IMDB score will be displayed in the UI.
 
\end_layout

\begin_layout Subsection
Data Flow Diagram
\end_layout

\begin_layout Standard
A data ﬂow diagram (DFD) is a graphical representation of the ﬂow of data
 through an information system.
 A DFD gives the preliminary overview of the system without going into great
 detail.
 Fig.4.3 represents the DFD of our proposed system.
 The ﬂow of the system is as follows:
\end_layout

\begin_layout Standard
1) User chooses the genre and inputs director and actor’s names.
 
\end_layout

\begin_layout Standard
2) The inputs will be sent to app.py.
 
\end_layout

\begin_layout Standard
3) Processing of the inputs and predicting output from the model which has
 been obtained after multiple linear regression takes place.
 
\end_layout

\begin_layout Standard
4) The predicted IMDB score will be displayed to the user.
 
\end_layout

\begin_layout Subsection
Sequence Diagram
\end_layout

\begin_layout Standard
A sequence diagram is an interaction diagram that shows how objects operate
 with one another and in what order.
 Fig.4.4 represents the sequence diagram that shows the interaction between
 the User, interface, server and the trained model.
 It gives the sequence of actions from the moment of user entering the image
 till the resulting image displayed to the user.
\end_layout

\begin_layout Chapter
Implementation 
\end_layout

\begin_layout Section
Implementation Details
\end_layout

\begin_layout Subsection
Hardware
\end_layout

\begin_layout Standard
• Processor: Intel Core i7 
\end_layout

\begin_layout Standard
• Ram: 8GB 
\end_layout

\begin_layout Standard
• GPU: NVIDIA 
\end_layout

\begin_layout Subsection
Software
\end_layout

\begin_layout Standard
• Operating System: Windows 10 (64bit) 
\end_layout

\begin_layout Standard
• Programming Languages: Python, HTML, CSS 
\end_layout

\begin_layout Standard
• Data Analysis Framework: Spyder, Flask 
\end_layout

\begin_layout Section
Implementation Details
\end_layout

\begin_layout Subsection
Organization of implementation files
\end_layout

\begin_layout Standard
The above diagram shows the organization of the implementation ﬁles.
 The detailed explanation of the ﬁgure is given in further sections.
 
\end_layout

\begin_layout Subsection
Dataset Collection 
\end_layout

\begin_layout Standard
The training dataset comprises of list of around 5000 movies with a number
 of attributes like director name, actor names, duration of the movie, year
 of release, genre, revenue collected, budget etc, along with the IMDB scores
 of the movies.
 The dataset consists of many genres and many movies which enables our learning
 algorithm to train with more amount of information.
\end_layout

\begin_layout Standard
The movie dataset is stored in the movie_metadata.xlsx in the form of Excel
 file.
 
\end_layout

\begin_layout Standard
The dataset is divided in the ratio 80:20 for training and testing respectively.
\end_layout

\begin_layout Standard
The app.py, model.py and request.py contain the files for our flask application.
\end_layout

\begin_layout Standard
The template ﬁle contains all the webpages in our website.
\end_layout

\begin_layout Subsection
Dataset Preprocessing
\end_layout

\begin_layout Standard
The first step in doing a data analysis project is to pre-process the data.
 The model.py file consists for the code to pre-process our data.
 The dataset consists of lots of entries of movies with a number of attributes
 like color, duration, year of release, director name, number of facebook
 likes, genre, IMDB scores, etc.
 
\end_layout

\begin_layout Enumerate
Removal of unwanted attributes- Now many of these attributes are not required
 while working the dataset.
 Hence, we remove these columns directly on the basis of initial screening.
 This is done using the drop command in Spyder.
\end_layout

\begin_layout Enumerate
Removal of null values- In any dataset, there will be a number of missing
 or null values that have to be removed to prevent any value from affecting
 the results produces after prediction.
 This is done using dropna command and including all the columns for which
 we need to check null values.
 For example, on giving director name in the arguments, a movie having null
 value for director name will be dropped from the dataset.
\end_layout

\begin_layout Enumerate
Considering language- We preferred to work only on movies having language
 as ‘English’ and hence we reduced the dataset to the movies consisting
 of only ‘English’ language movies.
\end_layout

\begin_layout Enumerate
Removing outliers- Outliers are those values which digress far from the
 dataset and can pose problems while calculating and predicting the IMDB
 score.
 For our dataset, we considered num_voted_users as a parameter for checking
 outlier conditions.
 Since IMDB scores depend greatly on the number of people who have voted
 for the movie, if the number of people who have voted for a movie is just
 a handful, then the scores wouldn’t be reliable.
 Hence, we find a threshold values for the num_voted_users below which,
 the corresponding movie tuple would be removed.
 For this we use quantile and give a value of 0.1 as argument.
 This value is stored in a variable and it is the threshold.
 It consists of the value which is 10% of the maximum num_voted_users.
 Then we check the dataset and remove all unwanted tuples.
\end_layout

\begin_layout Enumerate
Creating dummies- The attributes like director_name, actor_name and genres
 consist of names and they are categorical values.
 For working on a prediction model, we need numerical values.
 Hence, firstly we need to create dummies of the genres and then combine
 the results into a single column.
 For example, if a movie has action genre, then the dummy value of action
 will be 1 for that movie.
 If not, then a value of 0 will be assigned.
 Similarly for all genres, dummies will be created and we get an idea of
 all genres that comprise that particular movie.
 
\end_layout

\begin_layout Enumerate
Reducing the dataset- We then prefer to work on individual dataset based
 on particular genres.
 So initially we take the dataset consisting of only action movies.
 
\end_layout

\begin_layout Enumerate
Finding average IMDB scores- It’s highly possible that a director in a genre
 would have worked in many movies.
 So, we need to combine the scores for the director and produce an average
 score.
 Similarly, we do this for the actors as well.
\end_layout

\begin_layout Subsection
Weight Extraction
\end_layout

\begin_layout Standard
In a linear model, the different predictors in the equation are assigned
 a co-efficient value which indicates the weightage of that predictor on
 the response variable or output.
 The purpose of using a multiple linear regression model for our dataset
 is to obtain the weightage of different parameters like directors and actors
 to determine which features to consider for the model.
\end_layout

\begin_layout Standard
On training the model, the weights are self-adjusted to give the best and
 approximately correct output value based on our training dataset.
 These weights are then used as the base weights to further train and reﬁne
 the multiple linear regression models.
\end_layout

\begin_layout Subsection
Training the model
\end_layout

\begin_layout Standard
For training the model, the dataset is split into 80:20 ratios for training
 and testing respectively.
 It is done using-
\end_layout

\begin_layout Standard
from sklearn.model_selection import train_test_split xTrain, xTest, yTrain,
 yTest = train_test_split(x, y, test_size = 0.2, random_state = 100) 
\end_layout

\begin_layout Standard
A multiple linear regression model is used which is present in the in-built
 sklearn library of spyder.
 The parameters obtained from the pre-processed data are fed as input to
 this model along with output which is the IMDB score.A multiple linear regressio
n model is used which is present in the in-built sklearn library of spyder.
 The parameters obtained from the pre-processed data are fed as input to
 this model along with output which is the IMDB score.
\end_layout

\begin_layout Standard
The linear regression model can be obtained by imported from the sklearn
 library.
 As we need a multiple linear regression model, we give the argument of
 fit_intercept as true.
 It is demonstrated in the following code-
\end_layout

\begin_layout Standard
from sklearn.linear_model import LinearRegression mlr_model= LinearRegression(fit
_intercept=true) mlr_model.fit(x_train,y_train) 
\end_layout

\begin_layout Standard
The training values are fitted into the model where x_train represents the
 input training data and y_train represents the training output values.
\end_layout

\begin_layout Standard
model.py file consists of this code for model.
 On typing the command given below in Anaconda prompt, the training of the
 model takes place-
\end_layout

\begin_layout Standard
python model.py
\end_layout

\begin_layout Subsection
Testing the model
\end_layout

\begin_layout Standard
The model can be tested using the test data available.
 It validates the correctness of our model by comparing observed values
 against actual values.
 Testing data consists of that part of the dataset which is unknown to the
 model.
 Our model has trained on the basis of training data and that cannot be
 used to validate or test the model, since it is already known to the dataset.
\end_layout

\begin_layout Standard
The following code allows us to test the model on x_test values which we
 had originally obtained after splitting.
 The predictions are stored in a variable called predictions.
\end_layout

\begin_layout Standard
predictions=mlr_model.predict(x_test)
\end_layout

\begin_layout Subsection
Running the flask application
\end_layout

\begin_layout Standard
We have made a flask application for front end part of our predictive model.
 The webpages for our website are stored in templates file.
 The first page is index.html and it consists of a dropdown for selecting
 the genre.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Bibliography}
\end_layout

\end_inset

Hermawan Nugroho,Hamada Rasheed Hassan Al-Absi and Lee Pei Shan 
\begin_inset Quotes eld
\end_inset

Iris Recognition for Authentication: Development on a Lighter Computing
 Platform
\begin_inset Quotes erd
\end_inset

,978-1-5386-8369-9/18/$31.00 ©2018 IEEE.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Norman Nelufule, Antonie de Kock, Gugulethu Mabuza-Hocquet and Yaseen Moolla,
\begin_inset Quotes erd
\end_inset

Image Quality Assessment for Iris Biometrics for Minors
\begin_inset Quotes erd
\end_inset

,ISBN 978-1-5386-7365-2/19/$31.00 ©2019 IEEE.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

Bhakti B.Bhaganagare and Avinash.D.Harale,
\begin_inset Quotes erd
\end_inset

Iris as Biometrics for Security System
\begin_inset Quotes erd
\end_inset

,978-1-5090-3239-6/17/$31.00©2017IEEE.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"

\end_inset

Raj Gusain,Hemant Jain and Shivendra Pratap,
\begin_inset Quotes erd
\end_inset

Enhancing bank security system using Face Recognition, Iris Scanner and
 Palm Vein Technology
\begin_inset Quotes eld
\end_inset

,978-1-5090-6785-5/18/$31.00 © 2018 by IEEE.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset

Charan S G,
\begin_inset Quotes erd
\end_inset

Iris Recognition using Feature Optimization
\begin_inset Quotes erd
\end_inset

,978-1-5090-2399-8/16/$31.00 c 2016 IEEE
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "6"
key "key-6"
literal "false"

\end_inset

Yang Hu, Konstantinos Sirlantzis and Gareth Howells,
\begin_inset Quotes erd
\end_inset

Optimal Generation of Iris Codes for Iris Recognition
\begin_inset Quotes erd
\end_inset

,1556-6013 (c) 2016 IEEE
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "7"
key "key-7"
literal "false"

\end_inset

https://en.wikipedia.org/wiki/Internet_of_things
\end_layout

\end_body
\end_document
